{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC784\\uC8FC\\uC5F0\\\\Desktop\\\\react_portfolio\\\\src\\\\components\\\\sub\\\\Youtube.js\",\n    _s = $RefreshSig$();\n\nimport Layout from '../common/Layout';\nimport Popup from '../common/Popup';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Youtube() {\n  _s();\n\n  const [Vids, setVids] = useState([]);\n  const [Open, setOpen] = useState(false);\n  const [Index, setIndex] = useState(0);\n  useEffect(() => {\n    const key = 'AIzaSyAQ_q12A-8fN0wGsk6h9ZQJ_GL2AssIeis';\n    const playlist = 'PL5EyAeUspyQJ6thaGeeEDM-onb8h9GybD';\n    const num = 8;\n    const url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&key=${key}&playlistId=${playlist}&maxResults=${num}`;\n    axios.get(url).then(json => {\n      setVids(json.data.items);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      name: 'Youtube',\n      children: Vids.map((vid, idx) => {\n        const tit = vid.snippet.title;\n        const desc = vid.snippet.description;\n        const date = vid.snippet.publishedAt;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(Youtube, \"9A4Yoq3fctErRtyiosZ/y/nFuUo=\");\n\n_c = Youtube;\nexport default Youtube;\n\nvar _c;\n\n$RefreshReg$(_c, \"Youtube\");","map":{"version":3,"names":["Layout","Popup","axios","useEffect","useState","Youtube","Vids","setVids","Open","setOpen","Index","setIndex","key","playlist","num","url","get","then","json","data","items","map","vid","idx","tit","snippet","title","desc","description","date","publishedAt"],"sources":["C:/Users/임주연/Desktop/react_portfolio/src/components/sub/Youtube.js"],"sourcesContent":["import Layout from '../common/Layout';\r\nimport Popup from '../common/Popup';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Youtube() {\r\n\tconst [Vids, setVids] = useState([]);\r\n\tconst [Open, setOpen] = useState(false);\r\n\tconst [Index, setIndex] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst key = 'AIzaSyAQ_q12A-8fN0wGsk6h9ZQJ_GL2AssIeis';\r\n\t\tconst playlist = 'PL5EyAeUspyQJ6thaGeeEDM-onb8h9GybD';\r\n\t\tconst num = 8;\r\n\t\tconst url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&key=${key}&playlistId=${playlist}&maxResults=${num}`;\r\n\t\taxios.get(url).then((json) => {\r\n\t\t\tsetVids(json.data.items);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Layout name={'Youtube'}>\r\n\t\t\t\t{Vids.map((vid, idx) => {\r\n\t\t\t\t\tconst tit = vid.snippet.title;\r\n\t\t\t\t\tconst desc = vid.snippet.description;\r\n\t\t\t\t\tconst date = vid.snippet.publishedAt;\r\n\t\t\t\t})}\r\n\t\t\t</Layout>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Youtube;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACf,MAAMS,GAAG,GAAG,yCAAZ;IACA,MAAMC,QAAQ,GAAG,oCAAjB;IACA,MAAMC,GAAG,GAAG,CAAZ;IACA,MAAMC,GAAG,GAAI,wEAAuEH,GAAI,eAAcC,QAAS,eAAcC,GAAI,EAAjI;IACAZ,KAAK,CAACc,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,IAAD,IAAU;MAC7BX,OAAO,CAACW,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAP;IACA,CAFD;EAGA,CARQ,EAQN,EARM,CAAT;EAUA,oBACC;IAAA,uBACC,QAAC,MAAD;MAAQ,IAAI,EAAE,SAAd;MAAA,UACEd,IAAI,CAACe,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,KAAc;QACvB,MAAMC,GAAG,GAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAxB;QACA,MAAMC,IAAI,GAAGL,GAAG,CAACG,OAAJ,CAAYG,WAAzB;QACA,MAAMC,IAAI,GAAGP,GAAG,CAACG,OAAJ,CAAYK,WAAzB;MACA,CAJA;IADF;MAAA;MAAA;MAAA;IAAA;EADD,iBADD;AAWA;;GA1BQzB,O;;KAAAA,O;AA4BT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}